def solution(orders, course):
    answer = []
    # A. 코스 메뉴 조합 추출 => 2진법을 이용
    freq = [{} for i in range(11)]
    for order in orders:
        order = ''.join(sorted(order))
        for i in range(1, 2**len(order)):
            tmp = i
            menu = ''
            for j in range(len(order)):
                if tmp % 2 :
                    menu += order[j]
                tmp //= 2
            if menu in freq[len(menu)]:
                freq[len(menu)][menu] += 1
            else:
                freq[len(menu)][menu] = 1
    
    # print(freq)                
    # B. 코스요리 메뉴 계산
    for i in course:
        if not freq[i]: continue # 비어있을 경우 continue
        x = max(freq[i].values())
        if x <= 1 : continue
        for a,b in freq[i].items():
            if b == x: answer.append(a)
    
    return sorted(answer)

# import collections
# import itertools

# def solution(orders, course):
#     result = []

#     for course_size in course:
#         order_combinations = []
#         for order in orders:
#             order_combinations += itertools.combinations(sorted(order), course_size)
#         print(order_combinations)

#         most_ordered = collections.Counter(order_combinations).most_common()
#         print(most_ordered)
#         result += [ k for k, v in most_ordered if v > 1 and v == most_ordered[0][1] ]

#     return [ ''.join(v) for v in sorted(result) ]
