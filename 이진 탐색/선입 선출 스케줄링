# 파라메트릭 서치
def solution(n, cores):
    if n <= len(cores):
        return n
    n -= len(cores)

    # 마지막 작업이 큐에 들어가는 시간을 찾아내는 이분탐색 실시
    left = min(cores) * n // len(cores)
    right = min(cores) * n
    while left < right:
        mid = (left + right) // 2
        capacity = 0
        for c in cores:
            capacity += mid // c
        if capacity >= n:
            right = mid
        else:
            left = mid + 1

    # 결과로 나온 rignt = 마지막 작업이 코어에 들어가는 시간.
    # 이제부터 해당 시간에 어떤 코어로 작업이 들어가는지 알아내야한다.
    for c in cores:
        n -= (right - 1) // c

    for i in range(len(cores)):
        if right % cores[i] == 0:
            n -= 1
            if n == 0:
                return i + 1
